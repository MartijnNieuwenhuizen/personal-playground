@use 'sass:math';
@use 'sass:map';

/*
 * Transform value like 16 to em/rem value like 1em
 * Needed until Webpack transforms px values to rem automatically
 */
@function em($value) {
	/* stylelint-disable-next-line length-zero-no-unit */
	@return math.div($value, 16) + 0em;
}

@function rem($value) {
	/* stylelint-disable-next-line length-zero-no-unit */
	@return math.div($value, 16) + 0rem;
}

/*
* Transform value like 16 to em/rem value like 1em
* Needed until Webpack transforms px values to rem automatically
*/
@function em($value) {
	/* stylelint-disable-next-line length-zero-no-unit */
	@return math.div($value, 16) + 0em;
}

@function px-to-rem($value) {
	/* stylelint-disable-next-line length-zero-no-unit */
	@return math.div($value, 16) + 0rem;
}

/**
 * z-index function
 * For dynamically determining the stacking order of elements
 */
@function z($element) {
	@return map.get($z-index, $element);
}

/**
 * Map deep get
 * Fetch deeply nested values from a map
 */
@function map-deep-get($map, $keys...) {
	@each $key in $keys {
		$map: map.get($map, $key);
	}

	@return $map;
}
